{"version":3,"sources":["components/CardList.js","components/ErrorBoundry.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","_ref","robots","Error","ErrorBoundry","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","react_default","a","createElement","children","Component","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","style","overflow","border","height","App","onSearchChange","event","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","name","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_containers_App"],"mappings":"yNAyBeA,EAtBE,SAAAC,GAAgBA,EAAbC,OAEZ,MAAM,IAAIC,MAAM,UCiBTC,cAnBX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,UAAU,GAHCR,iFAODS,EAAOC,GACrBP,KAAKQ,SAAS,CAAEH,UAAU,qCAI1B,OAAIL,KAAKI,MAAMC,SACJI,EAAAC,EAAAC,cAAA,sCAEJX,KAAKJ,MAAMgB,gBAhBCC,aCaZC,EAbG,SAAAtB,GAAmCA,EAAhCuB,YAAgC,IAAnBC,EAAmBxB,EAAnBwB,aAC9B,OACIP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACXR,EAAAC,EAAAC,cAAA,SACIM,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,MCCXK,EARA,SAACzB,GACZ,OACIa,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAC/D7B,EAAMgB,WC8CJc,qBA3CX,SAAAA,IAAc,IAAA7B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0B,IACV7B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4B,GAAAvB,KAAAH,QAaJ2B,eAAiB,SAACC,GACd/B,EAAKW,SAAS,CAAEO,YAAaa,EAAMC,OAAOC,SAb1CjC,EAAKO,MAAQ,CACTX,OAAQ,GACRsB,YAAa,IAJPlB,mFAQK,IAAAkC,EAAA/B,KACfgC,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKvB,SAAS,CAAEf,OAAQ2C,uCAQlC,IAAAC,EAC2BrC,KAAKI,MAA7BX,EADH4C,EACG5C,OAAQsB,EADXsB,EACWtB,YACVuB,EAAiB7C,EAAO8C,OAAO,SAAA9C,GACjC,OAAOA,EAAO+C,KAAKC,cAAcC,SAAS3B,EAAY0B,iBAE1D,OAAsB,IAAlBhD,EAAOkD,OACAlC,EAAAC,EAAAC,cAAA,qBAIPF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,MACXR,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACiC,EAAD,CAAW5B,aAAchB,KAAK2B,iBAC9BlB,EAAAC,EAAAC,cAACkC,EAAD,KACIpC,EAAAC,EAAAC,cAACmC,EAAD,KACIrC,EAAAC,EAAAC,cAACoC,EAAD,CAAUtD,OAAQ6C,cAnCxBzB,cCKHmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnB,KAAAkB,EAAAE,KAAA,UAAqBpB,KAAK,SAAAzC,GAAiD,IAA9C8D,EAA8C9D,EAA9C8D,OAAQC,EAAsC/D,EAAtC+D,OAAQC,EAA8BhE,EAA9BgE,OAAQC,EAAsBjE,EAAtBiE,OAAQC,EAAclE,EAAdkE,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCADU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,OAKZhB","file":"static/js/main.45bfddca.chunk.js","sourcesContent":["import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    if (true) {\n        throw new Error('Noooo')\n    }\n    return (\n        <div>\n        {\n            robots.map((user, i) => {\n                return (\n                    <Card \n                        key={i} \n                        id={robots[i].id} \n                        name={robots[i].name} \n                        email={robots[i].email}\n                    />\n                );\n            })\n        }\n    </div>\n    );\n}\n\nexport default CardList;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info){ // This is a react version of try and catch error\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) { // If there is an error/hasError=True \n            return <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input \n                className='pa3 ba b--green bg-lightest-blue'\n                type='search' \n                placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css'\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n    \n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({ robots: users}));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robots =>{\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        if (robots.length === 0){\n            return <h1>Loading</h1>\n        }\n        else {\n        return (\n            <div className='tc'>\n                <h1>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        );\n        }\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}